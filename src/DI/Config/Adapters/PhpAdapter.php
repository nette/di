<?php

/**
 * This file is part of the Nette Framework (http://nette.org)
 * Copyright (c) 2004 David Grudl (http://davidgrudl.com)
 */

namespace Nette\DI\Config\Adapters;

use Nette,
	Nette\DI\Config\Helpers;


/**
 * Reading and generating PHP files.
 *
 * @author     David Grudl
 */
class PhpAdapter extends Nette\Object implements Nette\DI\Config\IAdapter
{
	/** @internal */
	const PREVENT_MERGING = '!';

	/**
	 * Reads configuration from PHP file.
	 * @param  string  file name
	 * @return array
	 */
	public function load($file)
	{
		$config = require $file;
		if (is_array($config)) {
			return $this->process($config);
		}
		return $config;
	}


	private function process(array $arr)
	{
		$res = array();
		foreach ($arr as $key => $val) {
			if (substr($key, -1) === self::PREVENT_MERGING) {
				if (!is_array($val) && $val !== NULL) {
					throw new Nette\InvalidStateException("Replacing operator is available only for arrays, item '$key' is not array.");
				}
				$key = substr($key, 0, -1);
				$val[Helpers::EXTENDS_KEY] = Helpers::OVERWRITE;

			}

			if (is_array($val)) {
				$val = $this->process($val);

			}
			$res[$key] = $val;
		}
		return $res;
	}


	/**
	 * Generates configuration in PHP format.
	 * @return string
	 */
	public function dump(array $data)
	{
		return "<?php // generated by Nette \nreturn " . Nette\PhpGenerator\Helpers::dump($data) . ';';
	}

}
